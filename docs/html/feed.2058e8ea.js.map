{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-272d91f6c243af82.js","src/modules/database.ts","src/modules/feed.ts","node_modules/@parcel/runtime-js/lib/runtime-744c61b5bd230550.js","node_modules/@parcel/runtime-js/lib/runtime-d76ff871030322ef.js","node_modules/@parcel/runtime-js/lib/runtime-c4ab1fb4fa549e41.js","node_modules/@parcel/runtime-js/lib/runtime-eec014d4583a85ad.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7YPdq\\\":\\\"feed.2058e8ea.js\\\",\\\"i7t2a\\\":\\\"punk.0d9f5c3d.png\\\",\\\"ha4U9\\\":\\\"sweater.a0afff79.png\\\",\\\"i0Lnm\\\":\\\"jester.289108ad.png\\\",\\\"7BcKz\\\":\\\"conductor.04e65b24.png\\\"}\"));","export { fetchDB, userExists, loginUser, addNewUser, loggedInUser, deleteUser, addNewPost };\n\n\nconst baseURL = 'https://megameetings-4101b-default-rtdb.europe-west1.firebasedatabase.app/';\n\nasync function fetchDB(): Promise<any> {\n\n    const url = baseURL + 'users.json';\n    const response = await fetch(url);\n    const users = await response.json();\n    return users;\n}\n\nasync function userExists(newUser): Promise<boolean> {\n\n    let exists: boolean = false;\n    const users = await fetchDB();\n\n\n\n    for (const user of users) {\n        if (user !== null) {\n            if (user.username === newUser.username) {\n                exists = true;\n                break;\n            }\n        }\n    }\n\n    return exists;\n}\n\nasync function loginUser(user): Promise<void> {\n\n    const { username, password } = user;\n    const dbUsers = await fetchDB();\n\n    dbUsers.forEach((user) => {\n\n        if (user !== null) {\n            if (user.username == username) {\n                if (user.password == password) {\n                    const jsonString = JSON.stringify(user);\n                    sessionStorage.setItem('activeUser', jsonString);\n                    window.location.assign('./html/feed.html');\n                }\n                else {\n                    alert('Wrong password');\n                }\n            }\n        }\n    })\n}\n\nasync function addNewUser(newUser): Promise<void> {\n\n    const users = await fetchDB();\n    const i = users.length;\n\n    const init = {\n        method: 'PUT',\n        body: JSON.stringify(newUser),\n        headers: {\n            'Content-type': \"application/json; charset=UTF-8\"\n        }\n    }\n\n    const url = `${baseURL}users/${i}.json`;\n    const response = await fetch(url, init);\n    await response.json();\n}\n\nasync function loggedInUser(activeUserObj): Promise<void> {\n\n    const { username, password } = activeUserObj;\n    const dbUsers = await fetchDB();\n    let index;\n\n    dbUsers.forEach((user, i) => {\n        if (user !== null) {\n\n            if (user.username == username) {\n                if (user.password == password) {\n                    index = i;\n                }\n            }\n        }\n    })\n    return index;\n}\n\n\nasync function deleteUser(index): Promise<void> {\n    const init = {\n        method: 'DELETE',\n        // body: JSON.stringify(newUser),\n        headers: {\n            'Content-type': \"application/json; charset=UTF-8\"\n        }\n    }\n\n    const url = `${baseURL}users/${index}.json`;\n    const response = await fetch(url, init);\n    await response.json();\n}\n\n\nasync function addNewPost(newPost, index) {\n\n    console.log(`funkar, nu inne på användare med index ${index} i database`);\n    console.log(`detta vill jag lägga till: ${newPost}`);\n\n    const init = {\n        method: 'POST',\n        body: JSON.stringify(newPost),\n        headers: {\n            'Content-type': \"application/json; charset=UTF-8\"\n        }\n    }\n\n    const url = `${baseURL}users/${index}/posts.json`;\n    const response = await fetch(url, init);\n    await response.json();\n}\n","import { fetchDB, deleteUser, loggedInUser, addNewPost } from \"./database\";\n\nconst jsonString: any = sessionStorage.getItem(\"activeUser\");\nconst activeUserObj = JSON.parse(jsonString);\nconst activeUserHeading = document.getElementById('activeuser-h') as HTMLHeadingElement;\nactiveUserHeading.innerText = activeUserObj.username;\n\n// Profile pictures saved to variables because of problems finding relative paths through parcel\nconst punk: HTMLImageElement = document.createElement('img')\nconst punkUrl = new URL('../images/punk.png', import.meta.url);\npunk.src = punkUrl.href;\n\nconst sweater: HTMLImageElement = document.createElement('img')\nconst sweaterUrl = new URL('../images/sweater.png', import.meta.url);\nsweater.src = sweaterUrl.href;\n\nconst jester: HTMLImageElement = document.createElement('img')\nconst jesterUrl = new URL('../images/jester.png', import.meta.url);\njester.src = jesterUrl.href;\n\nconst conductor: HTMLImageElement = document.createElement('img')\nconst conductorUrl = new URL('../images/conductor.png', import.meta.url);\nconductor.src = conductorUrl.href;\n// ----------------------------------------------------------------\n\n\nfetchDB()\n    .then(getUsersList)\n\n// ---------------------------------------------------------------- List of users\n\nfunction getUsersList(usersDB) {\n\n    // ((document.getElementById('users-ul')) as HTMLUListElement).innerHTML = '';\n\n    usersDB.forEach((user) => {\n\n        if(user !== null){\n\n            const liUser: HTMLLIElement = document.createElement('li');\n            liUser.innerText = user.username;\n            ((document.getElementById('users-ul')) as HTMLUListElement).append(liUser);\n    \n            liUser.addEventListener('click', () => {\n                displayUser(user);\n            })\n    \n            if (user.username == activeUserObj.username) {\n                displayUser(user);\n            }\n\n        }\n\n\n    });\n}\n\nasync function displayUser(user) {\n    const userInfo = document.getElementById('user-info') as HTMLElement;\n    userInfo.innerHTML = '';\n    const postsContainer = document.getElementById('posts-output-container') as HTMLElement;\n    postsContainer.innerHTML = '';\n\n    if (user.img == 'punk') userInfo.append(punk);\n    else if (user.img == 'sweater') userInfo.append(sweater);\n    else if (user.img == 'jester') userInfo.append(jester);\n    else if (user.img == 'conductor') userInfo.append(conductor);\n\n    const name = document.createElement('h2') as HTMLHeadElement;\n    name.innerText = user.username;\n    userInfo.appendChild(name);\n\n    const postBtn = document.getElementById('post-btn') as HTMLButtonElement;\n    postBtn.style.visibility = 'hidden';\n    if (user.username == activeUserObj.username) {\n        postBtn.style.visibility = 'visible';\n    }\n\n    const { posts } = user;\n    if (posts !== undefined) {\n        const userPosts = Object.values(posts);\n        userPosts.forEach(post => {\n            const postElement: any = document.createElement('h3');\n            postElement.innerText = post;\n            postsContainer.append(postElement);\n        })\n    }\n}\n\n// ---------------------------------------------------------------- Sign out & delete user\n\nconst signOutBtn = document.getElementById('signout-btn') as HTMLButtonElement;\nsignOutBtn.addEventListener('click', () => {\n    sessionStorage.clear();\n    window.location.assign('../index.html');\n})\n\nconst deleteAccBtn = document.getElementById('deleteaccount-btn') as HTMLButtonElement;\ndeleteAccBtn.addEventListener('click', async (event) => {\n    event.preventDefault();\n\n    loggedInUser(activeUserObj)\n        .then(deleteUser)\n\n    setTimeout(() => {\n        sessionStorage.clear();\n        window.location.assign('../index.html');\n    }, 2000);\n\n})\n\n\n// ----------------------------------------------------------------\n\nconst postInput = document.getElementById('post-input') as HTMLInputElement;\nconst postForm = document.getElementById('post-form') as HTMLFormElement;\npostForm.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    const newPost = postInput.value;\n    const index = await loggedInUser(activeUserObj);\n    addNewPost(newPost, index);\n    postInput.value = '';\n\n    setTimeout(() => {\n        window.location.reload();\n    }, 1000);\n\n})\n\n","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"i7t2a\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"ha4U9\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"i0Lnm\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"7BcKz\")).toString();"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$32c791bd5399aa33$var$baseURL","async","$32c791bd5399aa33$export$3cbc087763719fc4","url","response","fetch","json","$32c791bd5399aa33$export$8acc4cb114eeff32","activeUserObj","username","password","index","forEach","user","$32c791bd5399aa33$export$7d0f10f273c0438a","method","headers","$32c791bd5399aa33$export$7c6ab8cb794a5b11","newPost","console","log","init","body","stringify","$aa00c5615c8847e0$var$jsonString","sessionStorage","getItem","$aa00c5615c8847e0$var$activeUserObj","document","getElementById","innerText","$aa00c5615c8847e0$var$punk","createElement","$fb8f9f2ab19f1dd0$exports","URL","resolve","toString","$aa00c5615c8847e0$var$punkUrl","src","href","$aa00c5615c8847e0$var$sweater","$0edaf7a4490a624b$exports","$aa00c5615c8847e0$var$sweaterUrl","$aa00c5615c8847e0$var$jester","$06cbecbd797b4637$exports","$aa00c5615c8847e0$var$jesterUrl","$aa00c5615c8847e0$var$conductor","$7d015b76d8c36b67$exports","$aa00c5615c8847e0$var$conductorUrl","$aa00c5615c8847e0$var$displayUser","userInfo","innerHTML","postsContainer","img","append","name","appendChild","postBtn","style","visibility","posts","undefined","values","post","postElement","then","usersDB","liUser","addEventListener","clear","window","location","assign","event","preventDefault","setTimeout","$aa00c5615c8847e0$var$postInput","value","reload"],"version":3,"file":"feed.2058e8ea.js.map"}